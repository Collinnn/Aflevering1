x <- 3003,3005,2997,3006,2999,2998,3007,3005,3001
m <- mean(x)
q <- sd(x)
a <- q/length(x)
a <- q/sqrt(length(x))
# 'true' mean and standard deviation
mu <- 178
sigma <-12
# sample size
n <- 10
x <- rnorm(n,mu,sigma)
x
og <- 3000
x <- 3003,3005,2997,3006,2999,2998,3007,3005,3001
m <- mean(x)
q <- sd(x)
a <- q/sqrt(length(x))
# 'true' mean and standard deviation
mu <- 178
sigma <-12
# sample size
n <- 10
x <- rnorm(n,mu,sigma)
x
og <- 3000
x <- 3003,3005,2997,3006,2999,2998,3007,3005,3001
m <- mean(x)
q <- sd(x)
a <- q/sqrt(length(x))
# 'true' mean and standard deviation
mu <- 178
sigma <-12
# sample size
n <- 10
x <- rnorm(n,mu,sigma)
x
og <- 3000
x <- 3003,3005,2997,3006,2999,2998,3007,3005,3001
m <- mean(x)
q <- sd(x)
a <- q/sqrt(length(x))
# 'true' mean and standard deviation
mu <- 178
sigma <-12
# sample size
n <- 10
x <- rnorm(n,mu,sigma)
x
og <- 3000
x <- 3003,3005,2997,3006,2999,2998,3007,3005,3001
m <- mean(x)
q <- sd(x)
a <- q/sqrt(length(x))
# 'true' mean and standard deviation
mu <- 178
sigma <-12
# sample size
n <- 10
x <- rnorm(n,mu,sigma)
x
og <- 3000
x <- 3003,3005,2997,3006,2999,2998,3007,3005,3001
m <- mean(x)
q <- sd(x)
a <- q/sqrt(length(x))
# 'true' mean and standard deviation
mu <- 178
sigma <-12
# sample size
n <- 10
x <- rnorm(n,mu,sigma)
x
og <- 3000
x <- 3003,3005,2997,3006,2999,2998,3007,3005,3001
m <- mean(x)
q <- sd(x)
a <- q/sqrt(length(x))
og <- 3000
x <- c(3003,3005,2997,3006,2999,2998,3007,3005,3001)
m <- mean(x)
q <- sd(x)
a <- q/sqrt(length(x))
og<- 3000*5
q <- 3^2*5
2*(1-pnorm(15010,og,sqrt(q)))
qt(0.975,8)
2*(1-pnorm(15010,og,q))
mu <- 178
(1-pnorm(15010,og,sqrt(q)))
qt(0.975,0)
qt(0.975,8)
qt(0.95,8)
t.test(x)
(
(1-0.975)^2
sdf<-(1-0.975)^2
sdf <- (1-0.975)^2
sdf
sdf <- (0.975)^2
sdf
sdf <- (0.975*8)^2
sdf
sdf <- (1-0.975*8)^2
sdf
qchisq(c(0.975,0.025),8)
(length(x()-1)*sd(x)^2/17.534546,(length(x()-1)*sd(x)^2/2.179731
(length(x()-1)*sd(x)^2/17.534546
(length(x()-1)*sd(x)^2/2.179731
?qchisq
qchisq(c(0.975,0.025),8)
# 'true' mean and standard deviation
?qchisq
t.test(x,3000)
#Excercise 3.3
x<-c(3003,3005,2997,3006,2999,2998,3007,3005,3001)
t.test(x,3000)
t.test(x,mu=3000)
x<-c(3003,3005,2997,3006,2999,2998,3007,3005,3001)
t.test(x,mu=3000)
tobs=(mean(x)-3000)/sd(x)/sqrt(length(x))
tobs
mean(x)
sd(x)
tobs=(mean(x)-3000)/(sd(x)/sqrt(length(x)))
tobs
2*(1-pt(tobs,length(x)-1))
#Manual way
tobs=(mean(x)-3000)/(sd(x)/sqrt(length(x)))
#P værdi
2*(1-pt(tobs,length(x)-1))
abs(tobs)
#R auto mode
t.test(x,mu=3000)
?qt
pt(0.995,df=length(x)-1)
qt(0.995,df=length(x)-1)
5,df=length(x)-1)
qt(0.025,df=lengt
qt(1-0.025,df=length(x)-1)
qt(0.025,df=length(x)-1)
#C
qt(1-0.025,df=length(x)-1)
qqnorm(x)
qqline(x)
hist(x,6)
?hist
qqnorm(x)
qqline(x)
x<-c(180.2,180.0,180.01,179.97,179.92,180.05,179.94,180.10,180.24,180.12,180.13,180.22,179.96,180.10,179.96,180.06)
(mean(x)-180)/(sd(x)/sqrt(length(x)-1))
x<-c(180.02,180.0,180.01,179.97,179.92,180.05,179.94,180.10,180.24,180.12,180.13,180.22,179.96,180.06)
(mean(x)-180)/(sd(x)/sqrt(length(x)-1))
x<-c(180.02,180.00,180.01,179.97,179.92,180.05,179.94,180.10,180.24,180.12,180.13,180.22,179.96,180.10,179.96,180.06)
(mean(x)-180)/(sd(x)/sqrt(length(x)-1))
(mean(x)-180)/(sd(x)/sqrt(length(x)))
k=(mean(x)-180)/(sd(x)/sqrt(length(x)))
2*(1-pt(k,length(x)-1))
qt(1-0.005,length(x)-1)
qt(0.005,length(x)-1)
mean(x)
mean(x)+(sd(x)/sqrt(length(x)))
sd(x)
t=qt(1-0.005,length(x)-1)
mean(x)+t*(sd(x)/sqrt(length(x)))
mean(x)-t*(sd(x)/sqrt(length(x)))
t.test(x,conf.level(0.995))
t.test(x,conf.level=0.995)
Ya<-1.93
Yb<-1.49
Sa<-0.45
Sb<-0.58
tobs<-(Ya-Yb)/sqrt(Sa^2/9+Sb^2/9)
tobs<-(Ya-Yb)/sqrt(Sa^2/9+Sb^2/9)
nu<-(Sa^2/9+Sb^2/9)^2/(Sa^2/9)^2/(9-1)+(Sb^2/9)^2/(9-1)
2*(1-pt(tobs,nu))
Ya<-1.93
Yb<-1.49
Sa<-0.45
Sb<-0.58
tobs<-(Ya-Yb)/sqrt(Sa^2/9+Sb^2/9)
nu<-(Sa^2/9+Sb^2/9)^2/(Sa^2/9)^2/(9-1)+(Sb^2/9)^2/(9-1)
2*(1-pt(tobs,nu))
nu<-(Sa^2/9+Sb^2/9)^2/(Sa^2/9)^2/(8)+(Sb^2/9)^2/(8)
2
nu<-((Sa^2/9)+(Sb^2/9))^2/(Sa^2/9)^2/8+(Sb^2/9)^2/8
nu<-((Sa^2/9)+(Sb^2/9))^2/(((Sa^2/9)^2)/8+(Sb^2/9)^2/8)
(
(
2*(1-pt(tobs,nu))
2*(1-pt(tobs,nu))
2*(1-pt(tobs,nu))
qt(p=0.975,df=15)
q<-qt(p=0.975,df=15)
Ya-Yb+c(-1,1)*q*sqrt(Sa^2/9+0.58^2/9)
power.t.test(n=9,delta=0.4,sd=0.5,sig.level = 0.05)
power.t.test(n=9,power=0.8,sd=0.5,sig.level=0.05)
power.t.test(power=0.9,delta=0.4,sd=0.5,sig.level=0.05)
x1 <- c(9.1,8.0,7.7,10,9.6,7.9,9,7.1,8.3,9.6,8.2,9.2,7.3,8.5,9.5)
x2 <- c(8.2,6.4,6.6,8.5,8,5.8,7.8,7.2,6.7,9.8,7.1,7.7,6,6.6,8.4)
t.test(x1,x2)
t.test(x1,x2,pair=TRUE)
qt(p=0.995,df=12)
54.46+c(qt(p=0.995,df=12),-qt(p=0.995,df=12))*5.768/sqrt(13)
Pulse_end<-c(173,175,174,183,181,180,170,182,188,178,181,183,185)
Pulse_min<-c(120,115,122,123,125,140,108,133,134,121,130,126,128)
sqrt(12*var(Pulse_end))/qchisq(0.975,12))
sqrt(12*var(Pulse_end)/qchisq(0.975,12))
sqrt(12*var(Pulse_min)/qchisq(0.025,12))
q1<-sqrt(12*var(Pulse_end)/qchisq(0.975,12))
q2<-sqrt(12*var(Pulse_min)/qchisq(0.025,12))
ymax<-2.508
ymin<-2.103
symax<-0.3373
symin<-0.2834
sD<-0.09664
(ymax-ymin)+c(1,-1)*qt(0.975,df=9)*0.09664/sqrt(10)
(ymax-ymin)/sqrt(symax^2/10+symin^2/10)
(ymax-ymin)+c(1,-1)*qt(0.975,df=9)*0.09664/sqrt(10)
((ymax-ymin)-0.35)/sD/sqrt(10)
2*pt(abs(tobs),df=10-1,lower.tail=FALSE)
179.5-125
2*pt(abs(tobs),df=10-1,lower.tail=FALSE)
2*pt(abs(tobs),df=10-1,lower.tail=FALSE)
6.42-7.375/sqrt(2.205^2/50+1.813/24)
6.42-7.375/sqrt(2.205^2/50+1.813^2/24)
6.42-7.375/sqrt(2.205^2/50+(1.813^2)/24)
-6.42+7.375/sqrt(2.205^2/50+(1.813^2)/24)
7.375-6.42/sqrt(2.205^2/50+(1.813^2)/24)
(7.375-6.42)/sqrt(2.205^2/50+(1.813^2)/24)
s1<-2.205
s2<-1.813
n1<-50
n2<-24
(s1^2/n1+s2^2/n2)^2/(s2^4/n1^2/(n1-1)+s2^4/n2^2/(n2-1))
(s1^2/n1+s2^2/n2)^2/(s1^4/n1^2/(n1-1)+s2^4/n2^2/(n2-1))
2*(1-pt(1.97,54.4))
qt(p=0.995,df=54.4)
qt(p=0.995,df=54.4)
(7.375-6.42)+c(-1,1)*qt(p=0.995,df=54.4)*sqrt(2.205^2/50+(1.813^2)/24)
sqrt(23*1.813^2)/sqrt(qchisq(0.975,23))
sqrt(23*1.813^2)/sqrt(qchisq(0.025,23))
qnorm(0.95*3)/1
(qnorm(0.95)*3/1)^2
(qnorm(0.995)*3/1)^2
summary(fit)
fit <- lm(Q ~ Ta + G, data = D_model)
summary(fit)
setwd("D:/DTU/Statistik/Aflevering1/Aflevering1")
getwd()
#Reads table in csv from folder.
D <- read.table("soenderborg2_data.csv", sep = ";", header = TRUE)
# Dimensions of D (number of rows and columns)
dim(D)
# Column/variable names
names(D)
## The first rows/observations
head(D)
# The last rows/observations
tail(D)
# Selected summary statistics
summary(D)
# Another type of summary of the dataset
str(D)
#Dataen er 454 forskellige observiation til 5 forskellige værdier. Heri t,AGG,VAW,IWN,SPY.
#t er en string, de 4 andre er doubles.
#Atal non Applicable
sum(is.na(D$t))
sum(is.na(D$houseId))
sum(is.na(D$Q))
sum(is.na(D$Ta))
sum(is.na(D$G))
# Make 't' a date variable in R
D$t <- as.Date(D$t, format = "%d/%m/%Y")
# Choose data from 15 Oct 2009 to 15 Apr 2010 for the four houses
D_model <- subset(D, ("2009-10-15" <= t & t < "2010-04-16") &
(houseId %in% c(3, 5, 10, 17)))
# Remove observations with missing values
D_model <- na.omit(D_model)
udvalgte <- c("Q","Ta","G")
plotcolors <-c("Red","Green","Blue")
q<-0
par(mfrow = c(1, 3))
for(i in udvalgte){
q<- q+1
x<-D_model[, i]
hist(x,main=i,col=plotcolors[q])
}
q<-0
par(mfrow=c(1,3))
for(i in udvalgte){
q<- q+1
x<-D_model[, i]
boxplot(x,main=i,col=plotcolors[q])
}
q<-0
udvalgte2 <- c("Ta","G")
par(mfrow = c(2, 1))
for(i in udvalgte2){
q<- q+1
x<-D_model[, i]
plot(D_model$Q,x,main=i,col=plotcolors[q])
}
quantile(D_model$Q,c(.25,.50,.75))
sum(!is.na(D_model$Q))
mean(D_model$Q)
sd(D_model$Q)
quantile(D_model$Ta,c(.25,.50,.75))
sum(!is.na(D_model$Ta))
mean(D_model$Ta)
sd(D_model$Ta)
quantile(D_model$G,c(.25,.50,.75))
sum(!is.na(D_model$G))
mean(D_model$G)
sd(D_model$G)
fit <- lm(Q ~ Ta + G, data = D_model)
summary(fit)
fit <- lm(Q ~ Ta, data = D_model)
summary(fit)
fit <- lm(Q ~ Ta, data = D_model)
summary(fit)
fit <- lm(Q ~ Ta, data = D_model)
summary(fit)
fit <- lm(Q ~ Ta + G, data = D_model)
summary(fit)
fit <- lm(Q ~ Ta, data = D_model)
summary(fit)
fit <- lm(Q ~ G, data = D_model)
summary(fit)
fit <- lm(Q ~ Ta + G, data = D_model)
summary(fit)
cor(D_model$Q,D_model$Ta)^2
cor(D_model$G,D_model$Ta)^2
cor(D_model$Ta,D_model$Ta)^2
cor(D_model$Ta,D_model$Ta,D_model$G)^2
cor(D_model$Ta,D_model$Ta,D_model$G)^2
cor(D_model$Ta,D_model$G)^2
cor(D_model$Q,D_model$G)^2
cor(D_model$Q,D_model$Ta)^2
0.7178138+0.08525886
plot(fit$fitted.values, D_model$Q, xlab = "Fitted values",
ylab = "Heat consumption")
# Residuals against each of the explanatory variables
plot(D_model$EXPLANATORY_VARIABLE, fit$residuals,
xlab = "INSERT TEXT", ylab = "Residuals")
# Residuals against fitted values
plot(fit$fitted.values, fit$residuals, xlab = "Fitted values",
ylab = "Residuals")
# Normal QQ-plot of the residuals
qqnorm(fit$residuals, ylab = "Residuals", xlab = "Z-scores",
main = "")
qqline(fit$residuals)
par(mfrow = c(1, 1))
plot(fit$fitted.values, D_model$Q, xlab = "Fitted values",
ylab = "Heat consumption")
# Residuals against each of the explanatory variables
plot(D_model$EXPLANATORY_VARIABLE, fit$residuals,
xlab = "INSERT TEXT", ylab = "Residuals")
# Residuals against fitted values
plot(fit$fitted.values, fit$residuals, xlab = "Fitted values",
ylab = "Residuals")
# Normal QQ-plot of the residuals
qqnorm(fit$residuals, ylab = "Residuals", xlab = "Z-scores",
main = "")
qqline(fit$residuals)
plot(D_model$EXPLANATORY_VARIABLE, fit$residuals,
xlab = "INSERT TEXT", ylab = "Residuals")
plot(D_model$Q, fit$residuals,
xlab = "Q værdi", ylab = "Residuals")
plot(D_model$Q, fit$residuals,
xlab = "Q værdi", ylab = "Residuals")
plot(D_model$Ta, fit$residuals,
xlab = "Ta værdi", ylab = "Residuals")
plot(D_model$G, fit$residuals,
xlab = "Ta værdi", ylab = "Residuals")
par(mfrow = c(1, 6))
plot(fit$fitted.values, D_model$Q, xlab = "Fitted values",
ylab = "Heat consumption")
# Residuals against each of the explanatory variables
plot(D_model$Q, fit$residuals,
xlab = "Q værdi", ylab = "Residuals")
plot(D_model$Ta, fit$residuals,
xlab = "Ta værdi", ylab = "Residuals")
plot(D_model$G, fit$residuals,
xlab = "Ta værdi", ylab = "Residuals")
# Residuals against fitted values
plot(fit$fitted.values, fit$residuals, xlab = "Fitted values",
ylab = "Residuals")
# Normal QQ-plot of the residuals
qqnorm(fit$residuals, ylab = "Residuals", xlab = "Z-scores",
main = "")
qqline(fit$residuals)
par(mfrow = c(6, 1))
plot(fit$fitted.values, D_model$Q, xlab = "Fitted values",
ylab = "Heat consumption")
# Residuals against each of the explanatory variables
plot(D_model$Q, fit$residuals,
xlab = "Q værdi", ylab = "Residuals")
plot(D_model$Ta, fit$residuals,
xlab = "Ta værdi", ylab = "Residuals")
plot(D_model$G, fit$residuals,
xlab = "Ta værdi", ylab = "Residuals")
# Residuals against fitted values
plot(fit$fitted.values, fit$residuals, xlab = "Fitted values",
ylab = "Residuals")
# Normal QQ-plot of the residuals
qqnorm(fit$residuals, ylab = "Residuals", xlab = "Z-scores",
main = "")
qqline(fit$residuals)
par(mfrow = c(6, 1))
plot(fit$fitted.values, D_model$Q, xlab = "Fitted values",
ylab = "Heat consumption")
# Residuals against each of the explanatory variables
plot(D_model$Q, fit$residuals,
xlab = "Q værdi", ylab = "Residuals",col="red")
plot(D_model$Ta, fit$residuals,
xlab = "Ta værdi", ylab = "Residuals",col="green")
plot(D_model$G, fit$residuals,
xlab = "Ta værdi", ylab = "Residuals",col="blue")
# Residuals against fitted values
plot(fit$fitted.values, fit$residuals, xlab = "Fitted values",
ylab = "Residuals")
# Normal QQ-plot of the residuals
qqnorm(fit$residuals, ylab = "Residuals", xlab = "Z-scores",
main = "")
qqline(fit$residuals)
par(mfrow = c(2, 1))
par(mfrow = c(2, 1))
plot(fit$fitted.values, D_model$Q, xlab = "Fitted values",
ylab = "Heat consumption")
# Residuals against each of the explanatory variables
plot(D_model$Q, fit$residuals,
xlab = "Q værdi", ylab = "Residuals",col="red")
qqnorm(fit$residuals, ylab = "Residuals", xlab = "Z-scores",
main = "")
qqline(fit$residuals)
plot(fit$fitted.values, D_model$Q, xlab = "Fitted values",
ylab = "Heat consumption")
qqnorm(fit$residuals, ylab = "Residuals", xlab = "Z-scores",
main = "Normal QQ-plot")
qqline(fit$residuals)
qt(0.95)
confint(fit, level = 0.95)
qt(0.975,df=573)
−0.2089526±1.964113·0.0058260
−0.2089526+c(1,-1)*1.964113·0.0058260
−0.2089526+c(1,-1)*1.964113*0.0058260
2*pt(t,df=573)
B1 <- -0.2089526
s1 <- -0.0058260
t <- (B1-(-0.25))/s1
2*pt(t,df=573)
par(mfrow = c(1, 1))
qqnorm(fit$residuals, ylab = "Residuals", xlab = "Z-scores",
main = "Normal QQ-plot")
qqline(fit$residuals)
plot(D_model$Ta, fit$residuals,
xlab = "Ta værdi", ylab = "Residuals",col="green")
plot(D_model$G, fit$residuals,
xlab = "Ta værdi", ylab = "Residuals",col="blue")
par(mfrow = c(2,1))
plot(D_model$Ta, fit$residuals,
xlab = "Ta værdi", ylab = "Residuals",col="green")
plot(D_model$G, fit$residuals,
xlab = "Ta værdi", ylab = "Residuals",col="blue")
par(mfrow = c(1,1))
plot(fit$fitted.values, fit$residuals, xlab = "Fitted values",
ylab = "Residuals")
par(mfrow = c(2,1))
plot(D_model$Ta, fit$residuals,
xlab = "Udendørstemparatur", ylab = "Residuals",col="green")
plot(D_model$G, fit$residuals,
xlab = "Indstråling", ylab = "Residuals",col="blue")
plot(fit$fitted.values, fit$residuals, xlab = "Fitted values",
ylab = "Residuals")
fitt <- lm(Q ~ Ta, data = D_model)
summary(fitt)
fitG <- lm(Q ~ G, data = D_model)
summary(fitG)
fit <- lm(Q ~ Ta + G, data = D_model)
summary(fit)
fit <- lm(Q ~ Ta + G, data = D_model)
summary(fit)
fit <- lm(Q ~ Ta + G, data = D_model)
summary(fit)
fitt <- lm(Q ~ Ta, data = D_model)
summary(fitt)
fitG <- lm(Q ~ G, data = D_model)
summary(fitG)
par(mfrow = c(3,1))
plot(D_model$Q, fit$residuals,
xlab = "varmeforbrug", ylab = "Residuals",col="green")
plot(D_model$Ta, fit$residuals,
xlab = "Udendørstemparatur", ylab = "Residuals",col="green")
plot(D_model$G, fit$residuals,
xlab = "Indstråling", ylab = "Residuals",col="blue")
plot(D_model$Q, fit$residuals,
xlab = "varmeforbrug", ylab = "Residuals",col="red")
plot(D_model$Ta, fit$residuals,
xlab = "Udendørstemparatur", ylab = "Residuals",col="green")
plot(D_model$G, fit$residuals,
xlab = "Indstråling", ylab = "Residuals",col="blue")
summary(D_test)
D_test <- subset(D, (t == "2008-12-06" & houseId == 3)|
(t == "2009-02-22" & houseId == 5)|
(t == "2009-03-12" & houseId == 10)|
(t == "2009-04-01" & houseId == 17))
summary(D_test)
pred <- predict(fit, newdata = D_test,
interval = "prediction", level = 0.95)
# Observed values and predictions
cbind(id = D_test$houseId, Q = D_test$Q, pred)
confint(fit, level = 0.95)
